
kvblade: a 2.6 linux kernel module
---

Kvblade is a kernel module implementing the target
side of the AoE protocol.  Users can command the
module through sysfs to export block devices on
specified network interfaces.  The loopback device
should be used as an intermediary for exporting
regular files with kvblade.

An exported target has a tuple that uniquely defines
it:
	{ major, minor, netif }

Major is the aoemajor / shelf address, minor is the
aoeminor / slot address, and netif is the name of
the interface the target is bound on.  It is illegal
to attempt to create more than one of these in kvblade.

Three shell scripts have been created to facilitate interfacing
with kvblade through sysfs: kvstat, kvadd, and kvdel.  Kvstat
prints the list of currently exported vblades.  Kvadd and
kvdel are used to manage the exported vblades.

This is alpha code.  It appears stable, but has limitations
that need to be addressed.  See the TODO file for a list of
things that you can help with.

Author:
	Sam Hopkins
	Coraid, Inc.

Address support requests to
aoetools-discuss@lists.sourceforge.net.

Thanks to Lelik P. Korchagin for writing the first
kernel vblade module.  It was quite helpful as a
reference implementation.

---

Forked for the Tokera initiative

Improvements:
* Fixed a compile issue caused by the changed field bi_sector in BIO objects
* Removed the 16 static buffers and replaced them with 512 slab objects that are NUMA aligned
* Imported the AOE headers from the latest linux kernel version (4.2.9 - 4.8)
* Fixed incorrect reporting of capacity when attaching to a partition device
* Converted the single threaded worker to use a highly optimized multithreading architecture (pinned thread per core)
* Removed the worker spinlock and replaced with RCU symantics
* Removed a zero memory operation on new packets (which was wasted CPU time)
* Added a new system operation to broadcast AOE announce packets for all hosted devices (echo > /sys/kvblade/announce)
* Impremented per_cpu optimizations to reduce cache line thrashing
* Removed a cache line hot spot on aoedev.busy which was using atomic operations

Testing:
* Tested on kernel 4.2.9
* Number of physical server: 4
* Number of physical CPUs: 2
* Cores per CPU: 12
* RAM: 96GB
* Networking: 1GBit/s
* Disks: SSD (1GB) and HDD (4GB)
